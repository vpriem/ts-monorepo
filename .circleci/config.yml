version: 2.1

orbs:
  node: circleci/node@4.2.0

executors:
  node:
    docker:
      - image: cimg/node:14.19.3
        environment:
          HUSKY: 0

jobs:
  test:
    parameters:
      scope:
        type: string
        default: '@vpriem'
      package:
        type: string

    executor: node

    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run: yarn workspace << parameters.scope >>/<< parameters.package >> test
      - run: ./node_modules/.bin/codecov -f packages/<< parameters.package >>/coverage/clover.xml -F << parameters.package >>

  test-with-kafka:
    parameters:
      scope:
        type: string
        default: '@vpriem'
      package:
        type: string

    docker:
      - image: cimg/node:14.19.3
      - image: confluentinc/cp-zookeeper:7.2.1
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
      - image: confluentinc/cp-server:7.2.1
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: 'localhost:2181'
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092,PLAINTEXT_HOST://localhost:9092
          KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
          KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
          KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
          KAFKA_JMX_PORT: 9101
          KAFKA_JMX_HOSTNAME: localhost
          KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://localhost:8081
          CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: localhost:29092
          CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
          CONFLUENT_METRICS_ENABLE: 'false'
          CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      - image: confluentinc/cp-schema-registry:7.2.1
        environment:
          SCHEMA_REGISTRY_HOST_NAME: localhost
          SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'localhost:29092'
          SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

    environment:
      HUSKY: 0

    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Wait for kafka
          command: while ! nc -z localhost 9092 ; do sleep 1 ; done
      - run: yarn workspace << parameters.scope >>/<< parameters.package >> test
      - run: ./node_modules/.bin/codecov -f packages/<< parameters.package >>/coverage/clover.xml -F << parameters.package >>

  lint:
    parameters:
      scope:
        type: string
        default: '@vpriem'
      package:
        type: string

    executor: node

    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run: yarn workspace << parameters.scope >>/<< parameters.package >> lint

  build-and-publish:
    executor: node

    steps:
      - run:
          name: Configure npm
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run: yarn run publish --no-verify-access --yes from-package

workflows:
  version: 2

  deploy:
    jobs:
      - test:
          name: test-express-api-key-auth
          package: express-api-key-auth
      - lint:
          name: lint-express-api-key-auth
          package: express-api-key-auth

      - test:
          name: test-rest-client
          package: rest-client
      - lint:
          name: lint-rest-client
          package: rest-client

      - test-with-kafka:
          name: test-kafka-broker
          package: kafka-broker
      - lint:
          name: lint-kafka-broker
          package: kafka-broker

      - test:
          name: test-geojson
          package: geojson
      - lint:
          name: lint-geojson
          package: geojson

      - build-and-publish:
          requires:
            - test-express-api-key-auth
            - lint-express-api-key-auth

            - test-rest-client
            - lint-rest-client

            - test-kafka-broker
            - lint-kafka-broker

            - test-geojson
            - lint-geojson
          filters:
            branches:
              only: master
